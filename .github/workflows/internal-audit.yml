name: Internal Accessibility Audit

on:
    schedule:
        - cron: '0 0 * * 0' # Run weekly on Sunday at midnight
    workflow_dispatch: # Allow manual triggering
        inputs:
            urls:
                description: 'Comma-separated list of URLs to test (optional)'
                # Example: /insights,/about,/contact
                # Note: URLs should be relative paths from the domain
                # The full URL will be constructed as: {domain}{url}
                required: false
                default: '/insights,/governance/requests'
            domain:
                description: 'Base domain for the application'
                required: true
                default: 'develop.d2v3gatvj19pwm.amplifyapp.com/'

permissions:
    contents: read # To read repository contents for auditing
    pages: read # To access deployed pages if needed
    id-token: write # For authentication if needed
    actions: read # For workflow execution
    pull-requests: write # For providing audit feedback

jobs:
    accessibility-audit:
        runs-on: ubuntu-latest
        env:
            DOMAIN: ${{ github.event.inputs.domain }}
            TEST_URLS: ${{ github.event.inputs.urls || format('{0}/insights,{0}/about', github.event.inputs.domain) }}
            HEADLESS: 'true'
            LOGIN_USERNAME: 'shekh@atlan.com'
            LOGIN_PASSWORD: 'Qwzxqwzx123456#'
        steps:
            - uses: actions/checkout@v4

            - name: Clone accessibility audit repository
              run: |
                  git clone https://github.com/alii13/axe-accessibility-audit.git
                  cd axe-accessibility-audit

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20'
                  cache: 'npm'

            - name: Install Node.js dependencies
              run: |
                  cd axe-accessibility-audit
                  npm install

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: '3.11'
                  cache: 'pip'

            - name: Install Python dependencies
              run: |
                  cd axe-accessibility-audit
                  pip install -r requirements.txt

            - name: Run accessibility tests
              run: |
                  cd axe-accessibility-audit
                  npm test

            - name: Process test results
              run: |
                  cd axe-accessibility-audit
                  python combine_csv.py
                  python extract_violations.py

            - name: Upload results
              uses: actions/upload-artifact@v4
              with:
                  name: accessibility-results
                  path: |
                      axe-accessibility-audit/results/
                      axe-accessibility-audit/combined_accessibility_results.xlsx
                      axe-accessibility-audit/all_violations_except_nested_interactive.csv

            - name: Create GitHub Issue for Violations
              if: failure()
              uses: actions/github-script@v7
              with:
                  script: |
                      const fs = require('fs');
                      const violations = fs.readFileSync('axe-accessibility-audit/all_violations_except_nested_interactive.csv', 'utf8');

                      const issueTitle = 'Accessibility Violations Found';
                      const issueBody = `
                      # Internal Accessibility Audit Results

                      The automated accessibility audit has found violations that need attention.

                      ## Summary
                      - Total violations found: ${violations.split('\n').length - 1}

                      ## Detailed Report
                      The full report is available in the workflow artifacts.

                      Please review and address these accessibility issues.
                      `;

                      await github.rest.issues.create({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        title: issueTitle,
                        body: issueBody,
                        labels: ['accessibility', 'bug']
                      });