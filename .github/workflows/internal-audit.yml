name: Internal Accessibility Audit

on:
    schedule:
        - cron: '0 6 * * 0' # Run weekly on Sunday at 11:30 AM IST
    workflow_dispatch: # Allow manual triggering
        inputs:
            urls:
                description: 'Comma-separated list of URLs to test (optional)'
                # Example: /insights,/about,/contact
                # Note: URLs should be relative paths from the domain
                # The full URL will be constructed as: {domain}{url}
                required: false
                default: ''
            domain:
                description: 'Base domain for the application'
                required: true
                default: ''

permissions:
    contents: read # To read repository contents for auditing
    pages: read # To access deployed pages if needed
    id-token: write # For authentication if needed
    actions: read # For workflow execution
    pull-requests: write # For providing audit feedback

jobs:
    accessibility-audit:
        runs-on: ubuntu-latest
        env:
            DOMAIN: ${{ github.event.inputs.domain }}
            TEST_URLS: ${{ github.event.inputs.urls || format('{0}/insights,{0}/about', github.event.inputs.domain) }}
            HEADLESS: 'true'
            LOGIN_USERNAME: ${{ secrets.PREVIEW_USERNAME }} # preview.atlan.com - @atlansupport
            LOGIN_PASSWORD: ${{ secrets.PREVIEW_PASSWORD }}
        steps:
            - uses: actions/checkout@v4

            - name: Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: 9

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: 22
                  cache: 'pnpm'

            - name: Extract URLs and domain from urls.ts
              id: extract-config
              run: |
                  if [ -z "${{ github.event.inputs.domain }}" ]; then
                    # If no domain provided, read from urls.ts
                    echo "Using domain from urls.ts"
                    DOMAIN=$(node -e "const { DUMMY_DOMAIN } = require('./.github/constants/urls'); console.log(DUMMY_DOMAIN)")
                  else
                    # Use provided domain
                    echo "Using provided domain"
                    DOMAIN="${{ github.event.inputs.domain }}"
                  fi
                  echo "DOMAIN=$DOMAIN" >> $GITHUB_ENV

                  if [ -z "${{ github.event.inputs.urls }}" ]; then
                    # If no URLs provided, read from urls.ts
                    echo "Using URLs from urls.ts"
                    TEST_URLS=$(node -e "const urls = require('./.github/constants/urls').default; console.log(urls.join(','))")
                  else
                    # Use provided URLs
                    echo "Using provided URLs"
                    TEST_URLS="${{ github.event.inputs.urls }}"
                  fi
                  echo "TEST_URLS=$TEST_URLS" >> $GITHUB_ENV

            - name: Clone accessibility audit repository
              run: |
                  git clone -b github-action https://github.com/alii13/axe-accessibility-audit.git
                  cd axe-accessibility-audit
                  # Remove any existing node_modules to ensure clean install
                  rm -rf node_modules
                  # Install dependencies in the correct directory
                  pnpm install

            - name: Install Playwright browsers
              run: |
                  cd axe-accessibility-audit
                  pnpx playwright install chromium

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: '3.11'
                  cache: 'pip'

            - name: Install Python dependencies
              run: |
                  cd axe-accessibility-audit
                  pip install -r requirements.txt

            - name: Run accessibility tests
              run: |
                  cd axe-accessibility-audit
                  # Ensure we're in the correct directory and run the test
                  pnpm test

            - name: Process test results
              run: |
                  cd axe-accessibility-audit
                  python combine_csv.py
                  python extract_violations.py

            - name: Upload results
              uses: actions/upload-artifact@v4
              with:
                  name: accessibility-results
                  path: |
                      axe-accessibility-audit/results/
                      axe-accessibility-audit/combined_accessibility_results.xlsx
                      axe-accessibility-audit/all_violations_except_nested_interactive.csv

            - name: Create GitHub Issue for Violations
              if: failure()
              uses: actions/github-script@v7
              with:
                  script: |
                      const fs = require('fs');
                      const violations = fs.readFileSync('axe-accessibility-audit/all_violations_except_nested_interactive.csv', 'utf8');

                      const issueTitle = 'Accessibility Violations Found';
                      const issueBody = `
                      # Internal Accessibility Audit Results

                      The automated accessibility audit has found violations that need attention.

                      ## Summary
                      - Total violations found: ${violations.split('\n').length - 1}

                      ## Detailed Report
                      The full report is available in the workflow artifacts.

                      Please review and address these accessibility issues.
                      `;

                      await github.rest.issues.create({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        title: issueTitle,
                        body: issueBody,
                        labels: ['accessibility', 'bug']
                      });